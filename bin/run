#!/bin/bash
set -e

[ -d /dev/net ] ||
    mkdir -p /dev/net
[ -c /dev/net/tun ] ||
    mknod /dev/net/tun c 10 200

CONFIG_DIR=${CONFIG_DIR:-/etc/openvpn}
SCRIPT_PATH=$(cd `dirname "${BASH_SOURCE[0]}"` && pwd)

cd ${CONFIG_DIR}

export EASY_RSA="/usr/share/easy-rsa/"
export OPENSSL="openssl"
export PKCS11TOOL="pkcs11-tool"
export GREP="grep"
export KEY_CONFIG="$EASY_RSA/openssl-1.0.0.cnf"
export KEY_DIR="$CONFIG_DIR/keys"
export PKCS11_MODULE_PATH="dummy"
export PKCS11_PIN="dummy"

export KEY_SIZE=${KEY_SIZE:-2048}
export CA_EXPIRE=${CA_EXPIRE:-3650}
export KEY_EXPIRE=${KEY_EXPIRE:-3650}
export KEY_COUNTRY="${KEY_COUNTRY:-US}"
export KEY_PROVINCE="${KEY_PROVINCE:-CA}"
export KEY_CITY="${KEY_CITY:-SanFrancisco}"
export KEY_ORG="${KEY_ORG:-Fort-Funston}"
export KEY_EMAIL="${KEY_EMAIL:-me@myhost.mydomain}"
export KEY_OU="${KEY_OU:-MyOrganizationalUnit}"
export KEY_NAME="${KEY_NAME:-EasyRSA}"
export SERVER_NAME="${SERVER_NAME:-$(uname -n)}"
export CLIENTNAMES="${CLIENTNAMES:-clash}"

[ -d $KEY_DIR ] ||
    $EASY_RSA/clean-all

[ -f $KEY_DIR/ca.crt ] ||
    "$EASY_RSA/pkitool" --initca
export CA_CRT=$(< $KEY_DIR/ca.crt )

[ -f $KEY_DIR/${SERVER_NAME}.crt ] ||
    "$EASY_RSA/pkitool" --server "${SERVER_NAME}"

[ -f $KEY_DIR/dh${KEY_SIZE}.pem ] ||
    $EASY_RSA/build-dh
export DH_PARAMS=$(< $KEY_DIR/dh${KEY_SIZE}.pem)

[ -f $KEY_DIR/ta.key ] ||
    openvpn --genkey --secret $KEY_DIR/ta.key
export TA_KEY=$(< $KEY_DIR/ta.key)

[ "$SERVER_IP" ] || {
  SERVER_IP=$(upnpc -u "$UPNP_URL" -r $SERVER_PORT $SERVER_PROTO | grep ExternalIPAddress | tr -d ' ' | cut -d = -f 2)
  [ "$SERVER_IP" ] || {
    ping -c 1 -n $SERVER_NAME && SERVER_IP=$SERVER_NAME
    [ "$SERVER_IP" ] || {
      SERVER_IP=${SERVER_IP:-$(curl -s http://myip.enix.org/REMOTE_ADDR)}
      [ "$SERVER_IP" ] || {
        # TODO: add upnp discovery and pagekite/localtunnel/ngrok
        echo "Sorry, I could not figure out my public IP address."
        echo "(I use $SERVER_NAME, http://myip.enix.org/REMOTE_ADDR/,"
        echo "or UPnP for that purpose.)"
        exit 1
    }
  }
}
export SERVER_IP

cat $SCRIPT_PATH/server_stanza.template | envsubst > ${SERVER_NAME}-${SERVER_IP}-${SERVER_PROTO}-${SERVER_PORT}.servers

for CLIENTNAME in $CLIENTNAMES
do
    export CLIENTNAME
    [ -f $KEY_DIR/${CLIENTNAME}.key ] ||
        "$EASY_RSA/pkitool" "${CLIENTNAME}"
    export CLIENT_KEY=$(< $KEY_DIR/$CLIENTNAME.key)
    export CLIENT_CRT=$(< $KEY_DIR/$CLIENTNAME.crt)

    [ -f $KEY_DIR/${CLIENTNAME}.p12 ] ||
        $OPENSSL pkcs12 -export -inkey $KEY_DIR/$CLIENTNAME.key -in $KEY_DIR/$CLIENTNAME.crt -certfile $KEY_DIR/ca.crt -out $KEY_DIR/$CLIENTNAME.p12 -password pass:""
    # if we wanted a new config only when we first run, but the port and IP may change, so regenerate anyhow
    #[ -f client.${CLIENTNAME}.ovpn ] || {
    {

        cat $SCRIPT_PATH/client.combined.template | envsubst > client.${CLIENTNAME}.combined.ovpn
        cat $SCRIPT_PATH/client.template          | envsubst > client.${CLIENTNAME}.ovpn
        # Add in each server template to the bottom of the config, newest first for only the current server:
        # for SERVER_STANZA in "$(ls -t ${SERVER_NAME}*servers)"
        # Add in each server template to the bottom of the config, newest first for all servers using this same OpenVPN-Config:
        for SERVER_STANZA in "$(ls -t *servers)"
        do
            cat $SERVER_STANZA >> client.${CLIENTNAME}.combined.ovpn
            cat $SERVER_STANZA >> client.${CLIENTNAME}.ovpn
        done

    }

    #[ -d ${CLIENTNAME}.tblk ] || {
    {
        mkdir -p ${CLIENTNAME}.tblk
        mv client.${CLIENTNAME}.ovpn ${CLIENTNAME}.tblk
        cp ${KEY_DIR}/$CLIENTNAME.key ${KEY_DIR}/$CLIENTNAME.crt ${KEY_DIR}/ca.crt ${KEY_DIR}/dh${KEY_SIZE}.pem ${KEY_DIR}/ta.key ${CLIENTNAME}.tblk
        zip -r ${CLIENTNAME}.tblk.zip ${CLIENTNAME}.tblk
        zip -jr ${CLIENTNAME}.zip ${CLIENTNAME}.tblk
    }

#    #[ -f client.${CLIENTNAME}.http ] || cat >client.${CLIENTNAME}.http <<EOF
#    [ 0 ] || cat >client.${CLIENTNAME}.http <<EOF
#    HTTP/1.0 200 OK
#    Content-Type: application/x-openvpn-profile
#    Content-Length: $(wc -c client.${CLIENTNAME}.combined.ovpn | awk '{print $1}' )
#
#    $(cat client.${CLIENTNAME}.combined.ovpn)
#EOF

done

set -x

iptables -t nat -A POSTROUTING -s ${SERVER_NETWORK:-192.168.255.128}/${SERVER_NETMASK:-255.255.255.128} -o eth0 -j MASQUERADE

openvpn \
  --ca ${KEY_DIR}/ca.crt \
  --cert ${KEY_DIR}/${SERVER_NAME}.crt \
  --key ${KEY_DIR}/${SERVER_NAME}.key \
  --dh ${KEY_DIR}/dh${KEY_SIZE}.pem \
  --tls-auth ${KEY_DIR}/ta.key 0 \
  --port ${SERVER_PORT:-1194} \
  --proto ${SERVER_PROTO:-udp} \
  --dev ${SERVER_DEV:-tun} \
  --topology ${SERVER_TOPOLOGY:-subnet} \
  --server ${SERVER_NETWORK:-192.168.255.128} ${SERVER_NETMASK:-255.255.255.128} \
  --push "dhcp-option DNS ${DNS_SERVER:-8.8.8.8}" \
  --max-clients ${SERVER_MAX_CLIENTS:-20} \
  --ifconfig-pool-persist ipp.${SERVER_PROTO:-udp}.txt \
  --push "redirect-gateway def1 bypass-dhcp" \
  --persist-key \
  --persist-tun \
  --comp-lzo \
  --mode server \
  --tls-server \
  --user ${SERVER_USER:-nobody} \
  --group ${SERVER_GROUP:-nogroup} \
  --keepalive 10 120 \
  --status openvpn-status.udp.log \
  --verb 3
